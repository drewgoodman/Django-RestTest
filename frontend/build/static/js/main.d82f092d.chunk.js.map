{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","getCookie","handleChange","handleSubmit","deleteItem","startEdit","strikeUnstrike","this","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","fetch","then","response","json","data","setState","e","value","target","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","catch","error","console","task","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d82f092d.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todoList: [],\n      activeItem: {\n        id: null,\n        title: '',\n        completed: false,\n      },\n      editing: false,\n    }\n\n    this.fetchTasks = this.fetchTasks.bind(this);\n    this.getCookie = this.getCookie.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.deleteItem = this.deleteItem.bind(this);\n    this.startEdit = this.startEdit.bind(this);\n    this.strikeUnstrike = this.strikeUnstrike.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchTasks();\n\n  }\n\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  fetchTasks() {\n    fetch('http://127.0.0.1:8000/api/task-list/')\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          todoList: data\n        })\n      )\n  }\n\n  handleChange(e) {\n    const value = e.target.value;\n    this.setState({\n      activeItem: {\n        ...this.state.activeItem,\n        title: value\n      }\n    })\n\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const csrftoken = this.getCookie('csrftoken');\n\n    var url = 'http://127.0.0.1:8000/api/task-create/';\n    if(this.state.editing) {\n      url = `http://127.0.0.1:8000/api/task-update/${this.state.activeItem.id}/`;\n    }\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify(this.state.activeItem)\n    }).then(response => {\n      this.fetchTasks();\n      this.setState({\n        activeItem: {\n          id: null,\n          title: '',\n          completed: false,\n        },\n        editing:false,\n      })\n    }).catch(error => console.error(\"ERROR: \", error))\n  }\n\n  startEdit(task) {\n    this.setState({\n      activeItem: task,\n      editing: true,\n    })\n  }\n\n  deleteItem(task) {\n    const csrftoken = this.getCookie('csrftoken');\n    const url = `http://127.0.0.1:8000/api/task-delete/${task.id}/`;\n    fetch(url, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      }\n    }).then(response=> {\n      this.fetchTasks()\n    });\n  }\n\n  strikeUnstrike(task) {\n    task.completed = !task.completed;\n    const csrftoken = this.getCookie('csrftoken');\n    const url = `http://127.0.0.1:8000/api/task-update/${task.id}/`;\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify({'completed':task.completed, 'title':task.title})\n    }).then(response=> {\n      this.fetchTasks()\n    });\n\n  }\n\n  render() {\n    var tasks = this.state.todoList\n    const self = this;\n\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.handleSubmit} id=\"form\">\n              <div className=\"flex-wrapper\">\n                <div style={{ flex: 6 }}>\n                  <input onChange={this.handleChange} className=\"form-control\" id=\"title\" value={this.state.activeItem.title} type=\"text\" name=\"title\" placeholder=\"Add task...\"></input>\n                </div>\n                <div style={{ flex: 1 }}>\n                  <input className=\"btn btn-warning\" id=\"submit\" type=\"submit\" name=\"Add\" />\n                </div>\n              </div>\n            </form>\n          </div>\n          <div id=\"list-wrapper\">\n            {tasks.map(function (task, index) {\n              return (\n                <div key={index} className=\"task-wrapper flex-wrapper\">\n                  <div onClick={()=> self.strikeUnstrike(task)} style={{ flex: 7 }}>\n                    {\n                      task.completed ?\n                      <strike>{task.title}</strike>\n                      :\n                      <span>{task.title}</span>\n                    }\n                  </div>\n                  <div style={{ flex: 1 }}>\n                    <button onClick={()=> self.startEdit(task)} className=\"btn btn-sm btn-outline-info\">Edit</button>\n                  </div>\n                  <div style={{ flex: 1 }}>\n                    <button onClick={()=> self.deleteItem(task)} className=\"btn btn-sm btn-outline-dark delete\">-</button>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}